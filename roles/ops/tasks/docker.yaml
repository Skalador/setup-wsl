# Taken from https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
---
- name: Install packages that allow apt to be used over HTTPS
  become: true
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - lsb-release
      - gnupg-agent
      - software-properties-common

- name: Add an apt signing key for Docker
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add an apt signing key for Docker
  become: true
  changed_when: false
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: true

- name: Get os_codename variable
  ansible.builtin.command: lsb_release -cs
  register: os_codename_output
  changed_when: false

- name: Set os_codename fact
  set_fact:
    os_codename: "{{ os_codename_output.stdout }}"
  when: os_codename_output.stdout is defined

- name: Add apt repository for Docker stable version
  become: true
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ os_codename }} stable"
    state: present

- name: Install Docker and its dependecies
  become: true
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: Create the 'docker' group
  become: true
  group:
    name: docker
    state: present
  register: create_docker_group

- name: Add the current user to the 'docker' group
  become: true
  user:
    name: "{{ user }}"
    groups: docker
    append: true
  when: create_docker_group.changed

# - name: Switch to the 'docker' group for the current session "{{ user }}"
#   command: newgrp docker
#   become: true
#   become_user: "{{ user }}"

- name: Switch to the 'docker' group for the current session and run the hello-world Docker container
  command: newgrp docker && docker run hello-world
  become: true
  become_user: "{{ user }}"
  when: create_docker_group.changed
